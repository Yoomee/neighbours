-if @need.removed? && current_user.admin?
  .row
    .span12
      .alert.alert-error
        This request has been removed from the site and is only visible to admins.
-if @need.has_accepted_offer? && @need.accepted_offer.removed_at.nil?
  .row
    .span12
      -if logged_in_as?(@need.user)
        .alert.alert-success
          You have accepted
          %strong="#{@need.accepted_offer.user}'s offer"
          to help.
      -elsif logged_in_as?(@need.accepted_offer.user)
        .alert.alert-success
          ="#{@need.user} has accepted your offer to help!"
      -else
        .alert
          ="#{@need.user} has accepted someone else's offer."
.row.mt-2
  .span2
    =link_to (can?(:read,@need.user) ? @need.user : '#'), :class => "user-thumbnail-large pull-left" do
      =image_for_with_validation(@need.user, "120x120#", :rel => 'tooltip', :title =>"Joined on #{@need.user.created_at.strftime("%e %B %Y")}")
      -if @need.user.validated?
        .validated-icon{ :rel => 'tooltip', :title =>"Address validated"}
      
      %p=@need.user
  .span8
    .request-body.mb2
      %h1#need-title
        %small I need help with
        %span=title @need.title
        %p.location-smallprint
          %i.icon-map-marker
          =[@need.miles_from_s(current_user), @need.created_at.strftime("%e %B %Y")].reject(&:blank?).join(', ')
            
      -if current_user && current_user.validated?
        =simple_format(@need.description.capitalize)
      -else
        =@need.category.description
      -if current_user  
        .need_to_know_by
          I would like to know 
          =show_deadline(@need)
  -if @need.user == current_user
    .span2=link_to "Ask again", new_need_path(:like => @need.id ), :class => "btn"
      
#request-activity.row
  -if logged_in_as?(@need.user) && @offers.empty? && !@chat
    .span9.offset2
      .alert.alert-info
        -if current_user.try(:validated?)
          Sorry, no one has offered to help you with this yet. In the meantime why don't you click below to see who you could help?
        -else
          Your request for help will be published immediately.
      =link_to "Find someone who needs your help", needs_path, :class=>"btn call-to-action" if current_user.try(:validated?)
  -else
    .span8
      -if @need.user != current_user
        -if !@need.user.validated?
          .alert
            %b
              %i.icon-exclamation-sign
              =" #{@need.user} is a new user"
              %p
                They will not be able to respond to your offer of help until we have validated their account.
        .span
          -if current_user && @need.offers.exists?(:user_id => current_user.id)
            %p.mb3
              ="You can continue your discussion with #{@need.user} by writing a comment below ."
          -elsif @chat
            %p.mb3
            ="You can chat privately about #{@need.user}'s need by writing a comment below. If you decide you can help with this later, click the 'I can help' button to continue."
            =link_to "I can help", "#offer-form", :'data-toggle' => "modal",  :class => "btn btn-primary mb-2 mt-2"
          -else
            %p.mb3
              -if current_user
                .row
                  If you think you can help, then click 'I can help' to send a private offer and a message to
                  ="#{@need.user}. Alternatively, click 'Chat to #{@need.user} to chat privately about this need."
                .row.mt-2                
                  -if current_user.try(:validated?)
                    =link_to "I can help", "#offer-form", :'data-toggle' => "modal",  :class => "btn btn-primary mb-2"
                    =link_to "Chat to #{@need.user}", need_path(@need, :context => "chat"), :class => "btn btn-primary mb-2"
                  -elsif current_user.try(:fully_registered?)
                    =link_to "I can help", "#not-validated", :'data-toggle' => "modal",  :class => "btn btn-primary mb-2"
                    =link_to "Chat to #{@need.user}", "#not-validated", :'data-toggle' => "modal",  :class => "btn btn-primary mb-2"
                  -elsif current_user
                    =link_to "I can help", '#', :class => "btn btn-primary mb-2 not-fully-registered-link", :data => {:return_to => need_path(@need)}
              -else
                .row
                  =neighbourhood_snippet_text(:need_cannot_use, "Here is some text explaining why this page be cannot be used. This will be edited by John.")
                .row
                  =link_to "Join now", "#pre-register", :id=>"cta-3", :class=>"cta-intro cta-small", :"data-toggle"=>"modal"
              
      .row
        .span6
          %ul.unstyled.need-posts.mt-2
            -if can?(:create, Post) && @chat && @need.user != current_user
              =render("posts/remote_form", :post => current_user.posts.build(:target => @need, :context => 'chat'))
            =render(:partial => "needs/post", :collection => @need.posts_viewable_by(current_user).order("created_at DESC"))
    .span4
      -if @offers.present?
        %h3.mb1 People offering help
        %ul.thumbnails
          -@offers.each do |offer|
            %li.span1
              .list-image.thumbnail
                =link_to_with_tooltip(can?(:read, offer.user) ? offer.user : '#', :class => "pull-left") do
                  =image_for_with_validation(offer.user, "60x60#")
                  %p.small-text
                    =offer.user
.row
  .span12
    =options_panel do
      -if current_user
        =link_to("#inappropriate", :data => {:toggle => "modal"}) do
          %i.icon-warning-sign
          Report this page as inappropriate
      -if !@need.removed? && can?(:remove, @need)
        .clearfix
        -if current_user.try(:validated?)
          =link_to("Remove this request", remove_need_path(@need), :confirm => "Are you sure?", :class => "btn btn-danger mt-2")
        -else
          =link_to "Remove this request", "#not-validated", :'data-toggle' => "modal",  :class => "btn btn-danger mt-2"

-if @need.user != current_user
  #offer-form.modal.hide.fade
    -if current_user && @need.offers.exists?(:user_id => current_user.id)
      =render("needs/modal_post_form", :need => @need)
    -else
      =render('offers/modal_form')
-if current_user
  #inappropriate.modal.hide.fade
    =render("flags/modal_form", :flag => @need.flags.build)
    
=render "modals/not_validated"
